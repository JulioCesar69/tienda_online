<!DOCTYPE html>
<html>

<!-- INICIALIZAMOS LOS SCRIPTS A UTILIZAR -->
<script src="https://aframe.io/releases/1.0.0/aframe.min.js"></script>
<script src="https://cdn.rawgit.com/jeromeetienne/AR.js/1.6.0/aframe/build/aframe-ar.js"></script>
<script src="https://rawgit.com/donmccurdy/aframe-extras/master/dist/aframe-extras.loaders.min.js"></script>
<!-- FINALIZAN LOS SCRIPTS -->

<!-- INICIALIZAMOS LOS ESTILOS -->
<style>
    .hints span {
        text-shadow: 0px 0px 6px rgba(255, 255, 255, 0.7);
    }

    div {
        height: 100px;
        overflow: auto;
        position: absolute;
        bottom: 0px;
        right: 0;
        left: 0;
        background-color: rgba(255, 255, 255, 0.2);
        text-align: center;
        font-size: 25px;
        font-family: Verdana;
        font-family: Vegur, 'PT Sans', Verdana, sans-serif;
    }
</style>
<!-- FINALIZAMOS LOS ESTILOS -->

<head>
    <meta charset="utf-8">
    <title>Ar.js Augmented reality with Voice Recognition</title>
</head>

<body style='margin : 0px; overflow: hidden;'>

    <p class="hints"></p>
    <div>
        <p class="output"><em>Realidad Aumentada Empezando desde cero</em></p>
    </div>

    <!-- CODIGO DE REALIDAD AUMENTADA -->
    <a-scene embedded arjs="debugUIEnabled: false;" vr-mode-ui="enabled: false">
        <!-- CODIGO PARA UTILIZAR EL MARCADOR HIRO -->
        <a-marker-camera preset="hiro">

            <!-- EN ESTE CASO CREO UNA CAJA CON UN ID LLAMADO CAJA -->
            <a-box id="caja"></a-box>
            <!-- CREO UNA ENTIDAD CON ID LLAMADA entityID1 Y LA ESCALO -->
            <a-entity id="entityID1" scale=".30 .30 .30"></a-entity>
            <!-- CREO UNA ENTIDAD CON ID LLAMADA entityID2 Y LA ESCALO, CAMBIO LA POSICION Y LE DOY UNA ROTACION AL SER UN ELEMENTO 3D-->
            <a-entity id="entityID2" scale=".05 .05 .05" position="0 0 -1" rotation="0 180 0"></a-entity>
            <!-- CIERRO EL MARCADOR, DE ESTA MANERA ESTARA, LA CAJA, entityID1 y entityID2 -->

        </a-marker-camera>
        <!-- CIERRO MI SCENA DE AR -->
    </a-scene>

    <!-- INICIALIZO EL SCRIPT QUE CONTIENE TODOS LOS COMANDOS -->
    <script>
        // ESTE CONTADOR ESTA RELACIONADO CON LA LINEA DE CODIGO 217 Y 225
        window.contador = 0;
        //  ESTE CONTADOR ESTA RELACIONADO CON LA LINEA  282 Y 290
        window.contadorcubogrande = 0;

        /* CREMOS LAS VARIABLES QUE NOS PERMITEN UTILIZAR EL SPEECHRECOGNITION */
        var SpeechRecognition = SpeechRecognition || webkitSpeechRecognition
        var SpeechGrammarList = SpeechGrammarList || webkitSpeechGrammarList
        var SpeechRecognitionEvent = SpeechRecognitionEvent || webkitSpeechRecognitionEvent

        /* CREAMOS UN ARREGLO LLAMADO arreglovoz EL CUAL CONTRENDRA TODOS LOS COMANDOS QUE QUERAMOS AGREGAR Y QUE EL SISTEMA RECONOCERA */
        var arreglovoz = ['Hola realidad',
            'realidad deseo comprar',
            'realidad quiero ver las caracteristicas',
            'Gracias realidad'
        ];

        /* INICIALIAMOS LA GRAMATICA Y EL SPECHRECOGNITION */
        var grammar = '#JSGF V1.0; grammar arreglovoz; public <arreglovoz> = ' + arreglovoz.join(' | ') + ' ;'

        var recognition = new SpeechRecognition();
        var speechRecognitionList = new SpeechGrammarList();
        speechRecognitionList.addFromString(grammar, 1);
        recognition.grammars = speechRecognitionList;
        recognition.continuous = false;
        /* IDIOMA A SELECCIONAR EN ESTE CASO ESTA EN ESPAÑOL COLOMBIA PERO SE PUEDEN SELECCIONAR DE LA LISTA QUE GOOGLE
        TENGA*/
        recognition.lang = 'es-CO';
        /* FINALIZA LA SELECCION DE IDIOMA*/
        recognition.interimResults = false;
        recognition.maxAlternatives = 1;

        /* VARIABLE RELACIONADA A LAS LINEAS 405 A 415*/
        var diagnostic = document.querySelector('.output');



        /* VARIABLE REALACIONADA CON LA LINEA DE CODIGO 13 y 40*/
        var hints = document.querySelector('.hints');


        var vozHTML = '';
        arreglovoz.forEach(function (v, i, a) {
            console.log(v, i);

        });
        document.onkeydown = function () {
            recognition.start();
            console.log('Estoy lista para escuchar.');
        }

        recognition.onresult = function (event) {
                // La propiedad de resultados SpeechRecognitionEvent devuelve un objeto SpeechRecognitionResultList
                // The SpeechRecognitionEvent results property returns a SpeechRecognitionResultList object

                // El objeto SpeechRecognitionResultList contiene objetos SpeechRecognitionResult.
                // The SpeechRecognitionResultList object contains SpeechRecognitionResult objects.

                // Tiene un captador para que se pueda acceder como una matriz.
                // It has a getter so it can be accessed like an array.

                // El primer [0] devuelve el SpeechRecognitionResult en la última posición.
                // The first [0] returns the SpeechRecognitionResult at the last position.

                // Cada objeto SpeechRecognitionResult contiene objetos SpeechRecognitionAlternative que contienen resultados individuales.
                // Each SpeechRecognitionResult object contains SpeechRecognitionAlternative objects that contain individual results.

                // Estos también tienen captadores para que se pueda acceder a ellos como matrices.
                // These also have getters so they can be accessed like arrays.

                // El segundo [0] devuelve SpeechRecognitionAlternative en la posición 0.
                // The second [0] returns the SpeechRecognitionAlternative at position 0.

                // Luego devolvemos la propiedad de transcripción del objeto SpeechRecognitionAlternative
                // We then return the transcript property of the SpeechRecognitionAlternative object
                var voz = event.results[0][0].transcript;
                diagnostic.textContent = 'Dijiste: ' + voz + '.';

                bg = voz;
                var bg = document.querySelector('caja');

                //VISUALIZO EN CONSOLA
                console.log(bg);
                console.log(voz);

                // INTERACCIONES INICIALES PARA HACER MEJOR LA CONVERSACION PERO NO TIENEN NADA QUE VER CON AR
                if (voz === 'Hola realidad') {
                    console.log("Hola, estas saludando!");
                    let utterance = new SpeechSynthesisUtterance(
                        'Hola, bienvenido. en que puedo ayudarte Te escucho...')
                    utterance.lang = 'es-MX'
                    speechSynthesis.speak(utterance)
                }


                if (voz === 'Gracias realidad') {
                    console.log("Estan dando las gracias");
                    let utterance = new SpeechSynthesisUtterance('de nada, quieres que te ayude con algo mas?')
                    utterance.lang = 'es-MX'
                    speechSynthesis.speak(utterance)
                }


                if (voz === 'realidad eso es todo por ahora') {
                    console.log("Hola, estas saludando!");
                    let utterance = new SpeechSynthesisUtterance(
                        'de nada, siempre es un placer ayudarte. Te invito a que conozcas mas sobre PC BOX')
                    utterance.lang = 'es-MX'
                    speechSynthesis.speak(utterance)
                }
                // FINALIZAN LAS INTERACCIONES INICIALES